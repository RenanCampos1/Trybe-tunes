{"ast":null,"code":"var _jsxFileName = \"/home/renanc/Projetos/Trybe-tunes/src/pages/Album.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport getMusics from '../services/musicsAPI';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport SongCard from '../components/SongCard';\nimport { addSong, getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Album extends Component {\n  constructor() {\n    super();\n\n    this.listSelects = async e => {\n      const {\n        selection\n      } = this.state;\n      const newMusicas = selection.some(e2 => e2.trackName === e.trackName);\n\n      if (newMusicas) {\n        this.setState({\n          loading: true\n        }, async () => {\n          await removeSong(e);\n          await this.AddSelect();\n          this.setState({\n            loading: false\n          });\n        });\n      } else {\n        this.setState({\n          loading: true\n        }, async () => {\n          await addSong(e);\n          await this.AddSelect();\n          this.setState({\n            loading: false\n          });\n        });\n      }\n    };\n\n    this.AddSelect = async () => {\n      const checked = await getFavoriteSongs();\n      this.setState({\n        selection: checked\n      });\n    };\n\n    this.state = {\n      musics: [],\n      selection: [],\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    const getListMusic = async () => {\n      await this.AddSelect();\n      const {\n        match: {\n          params: {\n            id\n          }\n        }\n      } = this.props;\n      const listMusics = await getMusics(id);\n      this.setState({\n        musics: listMusics\n      });\n    };\n\n    getListMusic();\n  }\n\n  render() {\n    const {\n      musics,\n      selection,\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-album\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), musics.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: musics[0].artworkUrl60,\n          alt: musics[0].collectionName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": \"artist-name\",\n          children: musics[0].artistName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": \"album-name\",\n          children: musics[0].collectionName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Musicas n\\xE3o encontrada\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 23\n        }, this) : musics.map((e, index) => index > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(SongCard, {\n            trackName: e.trackName,\n            previewUrl: e.previewUrl\n          }, e.trackNumber, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: index,\n            children: [\"Favorita\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: index,\n              onClick: async () => {\n                await this.listSelects(e);\n                await this.AddSelect();\n              },\n              \"data-testid\": `checkbox-music-${e.trackId}`,\n              defaultChecked: selection.length > 0 && selection.some(e2 => e2.trackName === e.trackName)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, e.trackId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    })\n  })\n}.isRequired;","map":{"version":3,"names":["React","Component","PropTypes","getMusics","Header","Loading","SongCard","addSong","getFavoriteSongs","removeSong","Album","constructor","listSelects","e","selection","state","newMusicas","some","e2","trackName","setState","loading","AddSelect","checked","musics","componentDidMount","getListMusic","match","params","id","props","listMusics","render","length","artworkUrl60","collectionName","artistName","map","index","previewUrl","trackNumber","trackId","propTypes","shape","string","isRequired"],"sources":["/home/renanc/Projetos/Trybe-tunes/src/pages/Album.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport getMusics from '../services/musicsAPI';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport SongCard from '../components/SongCard';\nimport { addSong, getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\n\nexport default class Album extends Component {\n  constructor() {\n    super();\n    this.state = {\n      musics: [],\n      selection: [],\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    const getListMusic = async () => {\n      await this.AddSelect();\n      const { match: { params: { id } } } = this.props;\n\n      const listMusics = await getMusics(id);\n\n      this.setState({\n        musics: listMusics,\n      });\n    };\n    getListMusic();\n  }\n\n  listSelects = async (e) => {\n    const { selection } = this.state;\n    const newMusicas = selection.some((e2) => e2.trackName === e.trackName);\n    if (newMusicas) {\n      this.setState({ loading: true }, async () => {\n        await removeSong(e);\n        await this.AddSelect();\n        this.setState({ loading: false });\n      });\n    } else {\n      this.setState({ loading: true }, async () => {\n        await addSong(e);\n        await this.AddSelect();\n        this.setState({ loading: false });\n      });\n    }\n  };\n\n  AddSelect = async () => {\n    const checked = await getFavoriteSongs();\n    this.setState(({\n      selection: checked,\n    }));\n  };\n\n  render() {\n    const { musics, selection, loading } = this.state;\n    return (\n      <div data-testid=\"page-album\">\n        <Header />\n        { musics.length > 0\n          ? (\n            <div>\n              <img src={ musics[0].artworkUrl60 } alt={ musics[0].collectionName } />\n              <p data-testid=\"artist-name\">{musics[0].artistName}</p>\n              <p data-testid=\"album-name\">{musics[0].collectionName}</p>\n            </div>)\n          : <h1>Musicas n√£o encontrada</h1>}\n        <div>\n          { loading ? <Loading /> : musics.map((e, index) => (index > 0 && (\n            <div key={ e.trackId }>\n              <SongCard\n                key={ e.trackNumber }\n                trackName={ e.trackName }\n                previewUrl={ e.previewUrl }\n              />\n              <label\n                htmlFor={ index }\n              >\n                Favorita\n                <input\n                  type=\"checkbox\"\n                  id={ index }\n                  onClick={ async () => {\n                    await this.listSelects(e);\n                    await this.AddSelect();\n                  } }\n                  data-testid={ `checkbox-music-${e.trackId}` }\n                  defaultChecked={ selection.length > 0 && (\n                    selection.some((e2) => e2.trackName === e.trackName)\n                  ) }\n                />\n              </label>\n            </div>)))}\n        </div>\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }),\n}.isRequired;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}